\documentclass[a4paper]{article}
\usepackage{noweb}
% Needed to relax penalty for breaking code chunks across pages, otherwise 
% there might be a lot of space following a code chunk.
\def\nwendcode{\endtrivlist \endgroup}
\let\nwdocspar=\smallbreak

\usepackage[hyphens]{url}
\usepackage{hyperref}
\usepackage{authblk}

\input{preamble.tex}

\title{%
  rM: commanding the reMarkable
}
\author{%
  Daniel Bosk
}
\affil{%
  Independent researcher
}

\begin{document}
\maketitle

\begin{abstract}
  \input{abstract.tex}
\end{abstract}
\clearpage

\tableofcontents
\clearpage

@
\section{Introduction}

This is the documentation of the [[<<rM.py>>]] Python 3 script.
It does \dots

\subsection{Structural overview}

We use the standard structure for the script.
We have import statements at the top in the [[<<imports>>]] code block.
Then we have functions in the [[<<functions>>]] code block.
Finally, we have a [[main]] function which is run if the script is run directly 
but not if it is imported.
<<rM.py>>=
#!/usr/bin/env python3

<<imports>>
<<functions>>

def main(argv):
    <<main body>>

if __name__ == '__main__':
  sys.exit(main(sys.argv[1:]))
@

Since we rely on the [[sys]] module we need
<<imports>>=
import sys
@

\subsection{Parsing command-line arguments}

The main body is
<<main body>>=
<<parse command-line arguments>>
<<process command-line arguments and do main execution>>
@

To parse command-line arguments we will make use of [[argparse]]:
<<imports>>=
import argparse
@

We first create a parser, then set up the valid arguments and finally provide 
the dictionary [[args]] containing each argument that was passed on the command 
line.
<<parse command-line arguments>>=
argp = argparse.ArgumentParser(description="rM: commanding the reMarkable")

<<valid argparse arguments>>

args = vars(argp.parse_args(argv[1:]))
@

\subsection{Processing command-line arguments, the main functionality}

We expect a list of arguments on the command line.
<<valid argparse arguments>>=
argp.add_argument("arg", nargs="+", help="An argument to parse")
@



\printbibliography{}


\section{An index of the code blocks}
\nowebchunks

\end{document}
